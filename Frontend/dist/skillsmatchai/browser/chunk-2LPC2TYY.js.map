{
  "version": 3,
  "sources": ["src/app/job-seeker/components/cv-manager/cv-manager.component.ts"],
  "sourcesContent": ["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\n\r\ninterface CV {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  phone: string;\r\n  summary: string;\r\n  skills: string[];\r\n  link?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-cv-manager',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatExpansionModule,\r\n    MatChipsModule,\r\n  ],\r\n  template: `\r\n    <div class=\"cv-container\">\r\n      <mat-card>\r\n        <mat-card-header>\r\n          <mat-card-title>CV Manager</mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <form [formGroup]=\"cvForm\" (ngSubmit)=\"addCV()\" class=\"cv-form\">\r\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Full Name</mat-label>\r\n              <input matInput formControlName=\"name\" required />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Email</mat-label>\r\n              <input matInput formControlName=\"email\" type=\"email\" required />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Phone Number</mat-label>\r\n              <input matInput formControlName=\"phone\" type=\"tel\" required />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Professional Summary</mat-label>\r\n              <textarea\r\n                matInput\r\n                formControlName=\"summary\"\r\n                rows=\"4\"\r\n                required\r\n              ></textarea>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Skills</mat-label>\r\n              <mat-chip-grid #chipGrid>\r\n                <mat-chip-row\r\n                  *ngFor=\"let skill of skills\"\r\n                  (removed)=\"removeSkill(skill)\"\r\n                >\r\n                  {{ skill }}\r\n                  <button matChipRemove>\r\n                    <mat-icon>cancel</mat-icon>\r\n                  </button>\r\n                </mat-chip-row>\r\n              </mat-chip-grid>\r\n              <input\r\n                placeholder=\"New skill...\"\r\n                [matChipInputFor]=\"chipGrid\"\r\n                (matChipInputTokenEnd)=\"addSkill($event)\"\r\n              />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>CV Link</mat-label>\r\n              <input matInput formControlName=\"link\" type=\"url\" />\r\n            </mat-form-field>\r\n\r\n            <button\r\n              mat-raised-button\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              [disabled]=\"!cvForm.valid\"\r\n            >\r\n              Add CV\r\n            </button>\r\n          </form>\r\n\r\n          <mat-accordion class=\"cv-list\">\r\n            <mat-expansion-panel *ngFor=\"let cv of cvs\">\r\n              <mat-expansion-panel-header>\r\n                <mat-panel-title>{{ cv.name }}</mat-panel-title>\r\n                <mat-panel-description>\r\n                  {{ cv.email }} | {{ cv.skills.join(', ') }}\r\n                </mat-panel-description>\r\n              </mat-expansion-panel-header>\r\n\r\n              <p>{{ cv.summary }}</p>\r\n              <div class=\"cv-details\">\r\n                <span>Phone: {{ cv.phone }}</span>\r\n                <a\r\n                  *ngIf=\"cv.link\"\r\n                  [href]=\"cv.link\"\r\n                  target=\"_blank\"\r\n                  mat-button\r\n                  color=\"primary\"\r\n                >\r\n                  View CV\r\n                </a>\r\n              </div>\r\n\r\n              <mat-action-row>\r\n                <button mat-button color=\"warn\" (click)=\"deleteCV(cv)\">\r\n                  <mat-icon>delete</mat-icon>\r\n                  Delete\r\n                </button>\r\n              </mat-action-row>\r\n            </mat-expansion-panel>\r\n          </mat-accordion>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      .cv-container {\r\n        padding: 20px;\r\n      }\r\n      .cv-form {\r\n        margin-bottom: 20px;\r\n      }\r\n      .full-width {\r\n        width: 100%;\r\n        margin-bottom: 16px;\r\n      }\r\n      .cv-list {\r\n        margin-top: 20px;\r\n      }\r\n      .cv-details {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        margin-top: 16px;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class CvManagerComponent implements OnInit {\r\n  cvForm: FormGroup;\r\n  skills: string[] = [];\r\n  cvs: CV[] = [];\r\n\r\n  constructor(private fb: FormBuilder) {\r\n    this.cvForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      phone: ['', Validators.required],\r\n      summary: ['', Validators.required],\r\n      link: [''],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  addCV(): void {\r\n    if (this.cvForm.valid) {\r\n      const newCV: CV = {\r\n        id: Date.now().toString(),\r\n        ...this.cvForm.value,\r\n        skills: [...this.skills],\r\n      };\r\n      this.cvs.push(newCV);\r\n      this.cvForm.reset();\r\n      this.skills = [];\r\n    }\r\n  }\r\n\r\n  deleteCV(cv: CV): void {\r\n    const index = this.cvs.findIndex((c) => c.id === cv.id);\r\n    if (index !== -1) {\r\n      this.cvs.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  addSkill(event: any): void {\r\n    const value = (event.value || '').trim();\r\n    if (value) {\r\n      this.skills.push(value);\r\n      event.chipInput!.clear();\r\n    }\r\n  }\r\n\r\n  removeSkill(skill: string): void {\r\n    const index = this.skills.indexOf(skill);\r\n    if (index >= 0) {\r\n      this.skills.splice(index, 1);\r\n    }\r\n  }\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EgB,IAAA,yBAAA,GAAA,gBAAA,EAAA;AAEE,IAAA,qBAAA,WAAA,SAAA,8EAAA;AAAA,YAAA,WAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAW,OAAA,YAAA,QAAA,CAAkB;IAAA,CAAA;AAE7B,IAAA,iBAAA,CAAA;AACA,IAAA,yBAAA,GAAA,UAAA,EAAA,EAAsB,GAAA,UAAA;AACV,IAAA,iBAAA,GAAA,QAAA;AAAM,IAAA,uBAAA,EAAW,EACpB;;;;AAHT,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,UAAA,GAAA;;;;;AAwCF,IAAA,yBAAA,GAAA,KAAA,EAAA;AAOE,IAAA,iBAAA,GAAA,WAAA;AACF,IAAA,uBAAA;;;;AANE,IAAA,qBAAA,QAAA,MAAA,MAAA,uBAAA;;;;;;AAbN,IAAA,yBAAA,GAAA,qBAAA,EAA4C,GAAA,4BAAA,EACd,GAAA,iBAAA;AACT,IAAA,iBAAA,CAAA;AAAa,IAAA,uBAAA;AAC9B,IAAA,yBAAA,GAAA,uBAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAwB;AAG1B,IAAA,yBAAA,GAAA,GAAA;AAAG,IAAA,iBAAA,CAAA;AAAgB,IAAA,uBAAA;AACnB,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAwB,GAAA,MAAA;AAChB,IAAA,iBAAA,EAAA;AAAqB,IAAA,uBAAA;AAC3B,IAAA,qBAAA,IAAA,yDAAA,GAAA,GAAA,KAAA,EAAA;AASF,IAAA,uBAAA;AAEA,IAAA,yBAAA,IAAA,gBAAA,EAAgB,IAAA,UAAA,EAAA;AACkB,IAAA,qBAAA,SAAA,SAAA,8EAAA;AAAA,YAAA,QAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,SAAA,KAAA,CAAY;IAAA,CAAA;AACnD,IAAA,yBAAA,IAAA,UAAA;AAAU,IAAA,iBAAA,IAAA,QAAA;AAAM,IAAA,uBAAA;AAChB,IAAA,iBAAA,IAAA,UAAA;AACF,IAAA,uBAAA,EAAS,EACM;;;;AAzBE,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,MAAA,IAAA;AAEf,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,MAAA,OAAA,OAAA,MAAA,OAAA,KAAA,IAAA,GAAA,GAAA;AAID,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,MAAA,OAAA;AAEK,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,WAAA,MAAA,OAAA,EAAA;AAEH,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,MAAA,IAAA;;;AA8Cb,IAAO,qBAAP,MAAO,oBAAkB;EAKT;EAJpB;EACA,SAAmB,CAAA;EACnB,MAAY,CAAA;EAEZ,YAAoB,IAAe;AAAf,SAAA,KAAA;AAClB,SAAK,SAAS,KAAK,GAAG,MAAM;MAC1B,MAAM,CAAC,IAAI,WAAW,QAAQ;MAC9B,OAAO,CAAC,IAAI,CAAC,WAAW,UAAU,WAAW,KAAK,CAAC;MACnD,OAAO,CAAC,IAAI,WAAW,QAAQ;MAC/B,SAAS,CAAC,IAAI,WAAW,QAAQ;MACjC,MAAM,CAAC,EAAE;KACV;EACH;EAEA,WAAQ;EAAU;EAElB,QAAK;AACH,QAAI,KAAK,OAAO,OAAO;AACrB,YAAM,QAAY;QAChB,IAAI,KAAK,IAAG,EAAG,SAAQ;SACpB,KAAK,OAAO,QAFC;QAGhB,QAAQ,CAAC,GAAG,KAAK,MAAM;;AAEzB,WAAK,IAAI,KAAK,KAAK;AACnB,WAAK,OAAO,MAAK;AACjB,WAAK,SAAS,CAAA;IAChB;EACF;EAEA,SAAS,IAAM;AACb,UAAM,QAAQ,KAAK,IAAI,UAAU,CAAC,MAAM,EAAE,OAAO,GAAG,EAAE;AACtD,QAAI,UAAU,IAAI;AAChB,WAAK,IAAI,OAAO,OAAO,CAAC;IAC1B;EACF;EAEA,SAAS,OAAU;AACjB,UAAM,SAAS,MAAM,SAAS,IAAI,KAAI;AACtC,QAAI,OAAO;AACT,WAAK,OAAO,KAAK,KAAK;AACtB,YAAM,UAAW,MAAK;IACxB;EACF;EAEA,YAAY,OAAa;AACvB,UAAM,QAAQ,KAAK,OAAO,QAAQ,KAAK;AACvC,QAAI,SAAS,GAAG;AACd,WAAK,OAAO,OAAO,OAAO,CAAC;IAC7B;EACF;;qCAlDW,qBAAkB,4BAAA,WAAA,CAAA;EAAA;yEAAlB,qBAAkB,WAAA,CAAA,CAAA,gBAAA,CAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,YAAA,EAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,WAAA,GAAA,YAAA,WAAA,GAAA,CAAA,cAAA,WAAA,GAAA,YAAA,GAAA,CAAA,YAAA,IAAA,mBAAA,QAAA,YAAA,EAAA,GAAA,CAAA,YAAA,IAAA,mBAAA,SAAA,QAAA,SAAA,YAAA,EAAA,GAAA,CAAA,YAAA,IAAA,mBAAA,SAAA,QAAA,OAAA,YAAA,EAAA,GAAA,CAAA,YAAA,IAAA,mBAAA,WAAA,QAAA,KAAA,YAAA,EAAA,GAAA,CAAA,GAAA,WAAA,GAAA,SAAA,SAAA,GAAA,CAAA,eAAA,gBAAA,GAAA,wBAAA,iBAAA,GAAA,CAAA,YAAA,IAAA,mBAAA,QAAA,QAAA,KAAA,GAAA,CAAA,qBAAA,IAAA,SAAA,WAAA,QAAA,UAAA,GAAA,UAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,iBAAA,EAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,UAAA,UAAA,cAAA,IAAA,SAAA,WAAA,GAAA,QAAA,GAAA,MAAA,GAAA,CAAA,cAAA,IAAA,SAAA,QAAA,GAAA,OAAA,GAAA,CAAA,UAAA,UAAA,cAAA,IAAA,SAAA,WAAA,GAAA,MAAA,CAAA,GAAA,UAAA,SAAA,4BAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;;AA9H3B,MAAA,yBAAA,GAAA,OAAA,CAAA,EAA0B,GAAA,UAAA,EACd,GAAA,iBAAA,EACS,GAAA,gBAAA;AACC,MAAA,iBAAA,GAAA,YAAA;AAAU,MAAA,uBAAA,EAAiB;AAE7C,MAAA,yBAAA,GAAA,kBAAA,EAAkB,GAAA,QAAA,CAAA;AACW,MAAA,qBAAA,YAAA,SAAA,uDAAA;AAAA,QAAA,wBAAA,GAAA;AAAA,eAAA,sBAAY,IAAA,MAAA,CAAO;MAAA,CAAA;AAC5C,MAAA,yBAAA,GAAA,kBAAA,CAAA,EAAwD,GAAA,WAAA;AAC3C,MAAA,iBAAA,GAAA,WAAA;AAAS,MAAA,uBAAA;AACpB,MAAA,oBAAA,IAAA,SAAA,CAAA;AACF,MAAA,uBAAA;AAEA,MAAA,yBAAA,IAAA,kBAAA,CAAA,EAAwD,IAAA,WAAA;AAC3C,MAAA,iBAAA,IAAA,OAAA;AAAK,MAAA,uBAAA;AAChB,MAAA,oBAAA,IAAA,SAAA,CAAA;AACF,MAAA,uBAAA;AAEA,MAAA,yBAAA,IAAA,kBAAA,CAAA,EAAwD,IAAA,WAAA;AAC3C,MAAA,iBAAA,IAAA,cAAA;AAAY,MAAA,uBAAA;AACvB,MAAA,oBAAA,IAAA,SAAA,CAAA;AACF,MAAA,uBAAA;AAEA,MAAA,yBAAA,IAAA,kBAAA,CAAA,EAAwD,IAAA,WAAA;AAC3C,MAAA,iBAAA,IAAA,sBAAA;AAAoB,MAAA,uBAAA;AAC/B,MAAA,oBAAA,IAAA,YAAA,CAAA;AAMF,MAAA,uBAAA;AAEA,MAAA,yBAAA,IAAA,kBAAA,CAAA,EAAwD,IAAA,WAAA;AAC3C,MAAA,iBAAA,IAAA,QAAA;AAAM,MAAA,uBAAA;AACjB,MAAA,yBAAA,IAAA,iBAAA,MAAA,CAAA;AACE,MAAA,qBAAA,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA;AASF,MAAA,uBAAA;AACA,MAAA,yBAAA,IAAA,SAAA,CAAA;AAGE,MAAA,qBAAA,wBAAA,SAAA,mEAAA,QAAA;AAAA,QAAA,wBAAA,GAAA;AAAA,eAAA,sBAAwB,IAAA,SAAA,MAAA,CAAgB;MAAA,CAAA;AAH1C,MAAA,uBAAA,EAIE;AAGJ,MAAA,yBAAA,IAAA,kBAAA,CAAA,EAAwD,IAAA,WAAA;AAC3C,MAAA,iBAAA,IAAA,SAAA;AAAO,MAAA,uBAAA;AAClB,MAAA,oBAAA,IAAA,SAAA,EAAA;AACF,MAAA,uBAAA;AAEA,MAAA,yBAAA,IAAA,UAAA,EAAA;AAME,MAAA,iBAAA,IAAA,UAAA;AACF,MAAA,uBAAA,EAAS;AAGX,MAAA,yBAAA,IAAA,iBAAA,EAAA;AACE,MAAA,qBAAA,IAAA,oDAAA,IAAA,GAAA,uBAAA,EAAA;AA6BF,MAAA,uBAAA,EAAgB,EACC,EACV;;;;AA7FD,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,aAAA,IAAA,MAAA;AA8BoB,MAAA,oBAAA,EAAA;AAAA,MAAA,qBAAA,WAAA,IAAA,MAAA;AAWpB,MAAA,oBAAA;AAAA,MAAA,qBAAA,mBAAA,WAAA;AAcF,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,YAAA,CAAA,IAAA,OAAA,KAAA;AAOkC,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,WAAA,IAAA,GAAA;;oBAhF5C,cAAY,SAAA,MACZ,aAAW,oBAAA,sBAAA,iBAAA,sBAAA,mBACX,qBAAmB,oBAAA,iBACnB,eAAa,SAAA,gBAAA,eAAA,cACb,oBAAkB,cAAA,UAClB,gBAAc,UACd,iBAAe,WAAA,WACf,eAAa,SACb,oBAAkB,cAAA,mBAAA,4BAAA,yBAAA,wBAAA,8BAClB,gBAAc,aAAA,cAAA,eAAA,UAAA,GAAA,QAAA,CAAA,wbAAA,EAAA,CAAA;;;6EAiIL,oBAAkB,EAAA,WAAA,sBAAA,UAAA,oEAAA,YAAA,IAAA,CAAA;AAAA,GAAA;",
  "names": []
}
