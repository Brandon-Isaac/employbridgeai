{
  "version": 3,
  "sources": ["src/app/employer/components/listings/active-listings/active-listings.component.ts"],
  "sourcesContent": ["import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatCardModule } from '@angular/material/card';\r\n\r\ninterface JobListing {\r\n  id: number;\r\n  title: string;\r\n  department: string;\r\n  location: string;\r\n  type: string;\r\n  status: string;\r\n  applicants: number;\r\n  posted: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-active-listings',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    MatTableModule,\r\n    MatButtonModule,\r\n    MatChipsModule,\r\n    MatCardModule,\r\n  ],\r\n  template: `\r\n    <div class=\"listings-container\">\r\n      <mat-card>\r\n        <mat-card-header>\r\n          <mat-card-title>Active Job Listings</mat-card-title>\r\n          <mat-card-subtitle\r\n            >Manage your current job postings</mat-card-subtitle\r\n          >\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <table mat-table [dataSource]=\"jobListings\" class=\"mat-elevation-z0\">\r\n            <ng-container matColumnDef=\"title\">\r\n              <th mat-header-cell *matHeaderCellDef>Position</th>\r\n              <td mat-cell *matCellDef=\"let job\">{{ job.title }}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"department\">\r\n              <th mat-header-cell *matHeaderCellDef>Department</th>\r\n              <td mat-cell *matCellDef=\"let job\">{{ job.department }}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"location\">\r\n              <th mat-header-cell *matHeaderCellDef>Location</th>\r\n              <td mat-cell *matCellDef=\"let job\">{{ job.location }}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"type\">\r\n              <th mat-header-cell *matHeaderCellDef>Type</th>\r\n              <td mat-cell *matCellDef=\"let job\">\r\n                <mat-chip-set>\r\n                  <mat-chip>{{ job.type }}</mat-chip>\r\n                </mat-chip-set>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"status\">\r\n              <th mat-header-cell *matHeaderCellDef>Status</th>\r\n              <td mat-cell *matCellDef=\"let job\">\r\n                <mat-chip-set>\r\n                  <mat-chip\r\n                    [color]=\"job.status === 'Active' ? 'primary' : 'warn'\"\r\n                    selected\r\n                  >\r\n                    {{ job.status }}\r\n                  </mat-chip>\r\n                </mat-chip-set>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"applicants\">\r\n              <th mat-header-cell *matHeaderCellDef>Applicants</th>\r\n              <td mat-cell *matCellDef=\"let job\">{{ job.applicants }}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"posted\">\r\n              <th mat-header-cell *matHeaderCellDef>Posted</th>\r\n              <td mat-cell *matCellDef=\"let job\">{{ job.posted }}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef>Actions</th>\r\n              <td mat-cell *matCellDef=\"let job\">\r\n                <button mat-button color=\"primary\">Edit</button>\r\n                <button mat-button color=\"warn\">Close</button>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n          </table>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      .listings-container {\r\n        padding: 20px;\r\n      }\r\n      table {\r\n        width: 100%;\r\n      }\r\n      .mat-column-actions {\r\n        width: 120px;\r\n      }\r\n      .mat-card-header {\r\n        margin-bottom: 20px;\r\n      }\r\n      .mat-card-title {\r\n        font-size: 24px;\r\n        font-weight: 500;\r\n      }\r\n      .mat-card-subtitle {\r\n        font-size: 16px;\r\n      }\r\n      .mat-chip-set {\r\n        display: inline-block;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class ActiveListingsComponent {\r\n  displayedColumns: string[] = [\r\n    'title',\r\n    'department',\r\n    'location',\r\n    'type',\r\n    'status',\r\n    'applicants',\r\n    'posted',\r\n    'actions',\r\n  ];\r\n\r\n  jobListings: JobListing[] = [\r\n    {\r\n      id: 1,\r\n      title: 'Senior Frontend Developer',\r\n      department: 'Engineering',\r\n      location: 'Remote',\r\n      type: 'Full-time',\r\n      status: 'Active',\r\n      applicants: 12,\r\n      posted: '2024-03-01',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Product Manager',\r\n      department: 'Product',\r\n      location: 'New York, NY',\r\n      type: 'Full-time',\r\n      status: 'Active',\r\n      applicants: 8,\r\n      posted: '2024-03-05',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'UX Designer',\r\n      department: 'Design',\r\n      location: 'San Francisco, CA',\r\n      type: 'Contract',\r\n      status: 'Paused',\r\n      applicants: 5,\r\n      posted: '2024-03-10',\r\n    },\r\n  ];\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
