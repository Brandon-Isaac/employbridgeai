{
  "version": 3,
  "sources": ["src/app/employer/components/post-job/post-job.component.ts"],
  "sourcesContent": ["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\n\r\n@Component({\r\n  selector: 'app-post-job',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatChipsModule,\r\n  ],\r\n  template: `\r\n    <div class=\"post-job-container\">\r\n      <form [formGroup]=\"jobForm\" (ngSubmit)=\"onSubmit()\">\r\n        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n          <mat-label>Job Description</mat-label>\r\n          <textarea\r\n            matInput\r\n            formControlName=\"description\"\r\n            rows=\"6\"\r\n            required\r\n          ></textarea>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n          <mat-label>Location</mat-label>\r\n          <input matInput formControlName=\"location\" required />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n          <mat-label>Required Skills</mat-label>\r\n          <mat-chip-grid #chipGrid>\r\n            <mat-chip-row\r\n              *ngFor=\"let skill of requiredSkills\"\r\n              (removed)=\"removeSkill(skill)\"\r\n            >\r\n              {{ skill }}\r\n              <button matChipRemove>Ã—</button>\r\n            </mat-chip-row>\r\n          </mat-chip-grid>\r\n          <input\r\n            placeholder=\"New skill...\"\r\n            [matChipInputFor]=\"chipGrid\"\r\n            (matChipInputTokenEnd)=\"addSkill($event)\"\r\n          />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n          <mat-label>Experience Level</mat-label>\r\n          <mat-select formControlName=\"experienceLevel\" required>\r\n            <mat-option value=\"entry\">Entry Level</mat-option>\r\n            <mat-option value=\"mid\">Mid Level</mat-option>\r\n            <mat-option value=\"senior\">Senior Level</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n          <mat-label>Salary Range</mat-label>\r\n          <input matInput formControlName=\"salaryRange\" required />\r\n        </mat-form-field>\r\n\r\n        <div class=\"button-container\">\r\n          <button\r\n            mat-raised-button\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            [disabled]=\"!jobForm.valid\"\r\n            class=\"post-button\"\r\n          >\r\n            Post Job\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      .post-job-container {\r\n        max-width: 800px;\r\n        margin: 0 auto;\r\n        padding: 40px 20px;\r\n      }\r\n      .full-width {\r\n        width: 100%;\r\n        margin-bottom: 20px;\r\n      }\r\n      .button-container {\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        margin-top: 20px;\r\n      }\r\n      .post-button {\r\n        min-width: 120px;\r\n        height: 45px;\r\n        font-size: 16px;\r\n      }\r\n      ::ng-deep .mat-mdc-form-field-subscript-wrapper {\r\n        display: none;\r\n      }\r\n      ::ng-deep .mat-mdc-form-field {\r\n        background: white;\r\n        border-radius: 4px;\r\n      }\r\n      ::ng-deep .mat-mdc-text-field-wrapper {\r\n        background: white !important;\r\n      }\r\n      ::ng-deep .mat-mdc-form-field-flex {\r\n        background: white !important;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class PostJobComponent implements OnInit {\r\n  jobForm: FormGroup;\r\n  requiredSkills: string[] = [];\r\n\r\n  constructor(private fb: FormBuilder) {\r\n    this.jobForm = this.fb.group({\r\n      description: ['', Validators.required],\r\n      location: ['', Validators.required],\r\n      experienceLevel: ['', Validators.required],\r\n      salaryRange: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onSubmit(): void {\r\n    if (this.jobForm.valid) {\r\n      const jobData = {\r\n        ...this.jobForm.value,\r\n        requiredSkills: this.requiredSkills,\r\n      };\r\n      console.log('Job data:', jobData);\r\n      // Save job data to backend\r\n    }\r\n  }\r\n\r\n  addSkill(event: any): void {\r\n    const value = (event.value || '').trim();\r\n    if (value) {\r\n      this.requiredSkills.push(value);\r\n      event.chipInput!.clear();\r\n    }\r\n  }\r\n\r\n  removeSkill(skill: string): void {\r\n    const index = this.requiredSkills.indexOf(skill);\r\n    if (index >= 0) {\r\n      this.requiredSkills.splice(index, 1);\r\n    }\r\n  }\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
