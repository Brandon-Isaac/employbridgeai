{
  "version": 3,
  "sources": ["src/app/job-seeker/components/profile/profile.component.ts"],
  "sourcesContent": ["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { trigger, state, style, animate, transition } from '@angular/animations';\r\n\r\ninterface ProfileData {\r\n  firstName: string;\r\n  lastName: string;\r\n  headline: string;\r\n  summary: string;\r\n  email: string;\r\n  phone: string;\r\n  location: string;\r\n  currentJobTitle: string;\r\n  yearsOfExperience: number;\r\n  preferredJobType: string;\r\n  preferredLocation: string;\r\n  linkedinUrl: string;\r\n  githubUrl: string;\r\n  portfolioUrl: string;\r\n  availabilityStatus: string;\r\n  skills: Skill[];\r\n  education: Education[];\r\n  experience: Experience[];\r\n  matchScore: number;\r\n  recentActivity: Activity[];\r\n}\r\n\r\ninterface Skill {\r\n  name: string;\r\n  level: string;\r\n  category: string;\r\n}\r\n\r\ninterface Education {\r\n  institution: string;\r\n  degree: string;\r\n  field: string;\r\n  startDate: string;\r\n  endDate: string;\r\n  description?: string;\r\n}\r\n\r\ninterface Experience {\r\n  company: string;\r\n  position: string;\r\n  startDate: string;\r\n  endDate: string | null;\r\n  description: string;\r\n  location: string;\r\n}\r\n\r\ninterface Activity {\r\n  type: string;\r\n  description: string;\r\n  date: string;\r\n  icon: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatChipsModule,\r\n    MatIconModule,\r\n    MatDividerModule,\r\n    MatTooltipModule,\r\n    MatTabsModule,\r\n    MatBadgeModule\r\n  ],\r\n  animations: [\r\n    trigger('fadeIn', [\r\n      transition(':enter', [\r\n        style({ opacity: 0, transform: 'translateY(10px)' }),\r\n        animate('400ms ease-out', style({ opacity: 1, transform: 'translateY(0)' }))\r\n      ])\r\n    ]),\r\n    trigger('slideIn', [\r\n      transition(':enter', [\r\n        style({ opacity: 0, transform: 'translateX(-20px)' }),\r\n        animate('500ms ease-out', style({ opacity: 1, transform: 'translateX(0)' }))\r\n      ])\r\n    ])\r\n  ],\r\n  template: `\r\n    <div class=\"profile-container\" *ngIf=\"profile\">\r\n      <!-- Header Section -->\r\n      <div class=\"profile-header\" [@fadeIn]>\r\n        <div class=\"header-content\">\r\n          <div class=\"profile-avatar\">\r\n            <div class=\"avatar-circle\">\r\n              {{ profile.firstName.charAt(0) }}{{ profile.lastName.charAt(0) }}\r\n            </div>\r\n            <div class=\"availability-badge\" [ngClass]=\"getAvailabilityClass(profile.availabilityStatus)\">\r\n              <span>{{ getAvailabilityText(profile.availabilityStatus) }}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"profile-info\">\r\n            <h1>{{ profile.firstName }} {{ profile.lastName }}</h1>\r\n            <h2>{{ profile.headline }}</h2>\r\n            <div class=\"profile-stats\">\r\n              <div class=\"stat\">\r\n                <i class=\"fas fa-map-marker-alt\"></i>\r\n                <span>{{ profile.location }}</span>\r\n              </div>\r\n              <div class=\"stat\">\r\n                <i class=\"fas fa-briefcase\"></i>\r\n                <span>{{ profile.yearsOfExperience }} years experience</span>\r\n              </div>\r\n              <div class=\"stat\">\r\n                <i class=\"fas fa-users\"></i>\r\n                <span>{{ profile.preferredJobType | titlecase }}</span>\r\n              </div>\r\n            </div>\r\n            <div class=\"profile-actions\">\r\n              <button mat-raised-button color=\"primary\">\r\n                <i class=\"fas fa-edit\"></i> Edit Profile\r\n              </button>\r\n              <button mat-stroked-button>\r\n                <i class=\"fas fa-download\"></i> Download CV\r\n              </button>\r\n              <button mat-stroked-button matTooltip=\"Share profile link\">\r\n                <i class=\"fas fa-share-alt\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"match-score\" matTooltip=\"AI Match Score - How well your profile matches job requirements\">\r\n            <div class=\"score-circle\">\r\n              <div class=\"score-value\">{{ profile.matchScore }}%</div>\r\n              <svg viewBox=\"0 0 36 36\" class=\"score-chart\">\r\n                <path class=\"score-circle-bg\"\r\n                  d=\"M18 2.0845\r\n                    a 15.9155 15.9155 0 0 1 0 31.831\r\n                    a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                />\r\n                <path class=\"score-circle-fill\"\r\n                  [attr.stroke-dasharray]=\"profile.matchScore + ', 100'\"\r\n                  d=\"M18 2.0845\r\n                    a 15.9155 15.9155 0 0 1 0 31.831\r\n                    a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                />\r\n              </svg>\r\n            </div>\r\n            <span>Match Score</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Main Content -->\r\n      <div class=\"profile-content\">\r\n        <div class=\"content-grid\">\r\n          <!-- Left Column -->\r\n          <div class=\"left-column\" [@slideIn]>\r\n            <!-- Summary Card -->\r\n            <mat-card class=\"profile-card summary-card\">\r\n              <mat-card-header>\r\n                <mat-card-title>About</mat-card-title>\r\n              </mat-card-header>\r\n              <mat-card-content>\r\n                <p>{{ profile.summary }}</p>\r\n              </mat-card-content>\r\n            </mat-card>\r\n\r\n            <!-- Contact Card -->\r\n            <mat-card class=\"profile-card contact-card\">\r\n              <mat-card-header>\r\n                <mat-card-title>Contact Information</mat-card-title>\r\n              </mat-card-header>\r\n              <mat-card-content>\r\n                <div class=\"contact-item\">\r\n                  <i class=\"fas fa-envelope\"></i>\r\n                  <span>{{ profile.email }}</span>\r\n                </div>\r\n                <div class=\"contact-item\">\r\n                  <i class=\"fas fa-phone\"></i>\r\n                  <span>{{ profile.phone }}</span>\r\n                </div>\r\n                <div class=\"contact-item\">\r\n                  <i class=\"fas fa-map-marker-alt\"></i>\r\n                  <span>{{ profile.location }}</span>\r\n                </div>\r\n                <div class=\"social-links\">\r\n                  <a [href]=\"profile.linkedinUrl\" target=\"_blank\" *ngIf=\"profile.linkedinUrl\" matTooltip=\"LinkedIn Profile\">\r\n                    <i class=\"fab fa-linkedin\"></i>\r\n                  </a>\r\n                  <a [href]=\"profile.githubUrl\" target=\"_blank\" *ngIf=\"profile.githubUrl\" matTooltip=\"GitHub Profile\">\r\n                    <i class=\"fab fa-github\"></i>\r\n                  </a>\r\n                  <a [href]=\"profile.portfolioUrl\" target=\"_blank\" *ngIf=\"profile.portfolioUrl\" matTooltip=\"Portfolio\">\r\n                    <i class=\"fas fa-globe\"></i>\r\n                  </a>\r\n                </div>\r\n              </mat-card-content>\r\n            </mat-card>\r\n\r\n            <!-- Skills Card -->\r\n            <mat-card class=\"profile-card skills-card\">\r\n              <mat-card-header>\r\n                <mat-card-title>Skills</mat-card-title>\r\n                <button mat-button color=\"primary\" class=\"card-action-btn\">\r\n                  <i class=\"fas fa-plus\"></i> Add Skills\r\n                </button>\r\n              </mat-card-header>\r\n              <mat-card-content>\r\n                <div class=\"skills-categories\">\r\n                  <div class=\"skill-category\" *ngFor=\"let category of skillCategories\">\r\n                    <h4>{{ category }}</h4>\r\n                    <div class=\"skill-chips\">\r\n                      <mat-chip-set>\r\n                        <mat-chip *ngFor=\"let skill of getSkillsByCategory(category)\" [matTooltip]=\"skill.level + ' level'\">\r\n                          {{ skill.name }}\r\n                          <span class=\"skill-level\" [ngClass]=\"'level-' + skill.level.toLowerCase()\"></span>\r\n                        </mat-chip>\r\n                      </mat-chip-set>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </mat-card-content>\r\n            </mat-card>\r\n          </div>\r\n\r\n          <!-- Right Column -->\r\n          <div class=\"right-column\">\r\n            <!-- Experience & Education Tabs -->\r\n            <mat-card class=\"profile-card experience-card\">\r\n              <mat-tab-group animationDuration=\"400ms\" color=\"accent\">\r\n                <mat-tab label=\"Experience\">\r\n                  <div class=\"tab-content\">\r\n                    <div class=\"timeline\">\r\n                      <div class=\"timeline-item\" *ngFor=\"let exp of profile.experience\">\r\n                        <div class=\"timeline-marker\"></div>\r\n                        <div class=\"timeline-content\">\r\n                          <div class=\"timeline-header\">\r\n                            <h3>{{ exp.position }}</h3>\r\n                            <span class=\"timeline-period\">\r\n                              {{ exp.startDate }} - {{ exp.endDate || 'Present' }}\r\n                            </span>\r\n                          </div>\r\n                          <div class=\"timeline-company\">\r\n                            <span class=\"company-name\">{{ exp.company }}</span>\r\n                            <span class=\"company-location\">{{ exp.location }}</span>\r\n                          </div>\r\n                          <div class=\"timeline-description\">\r\n                            <p>{{ exp.description }}</p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </mat-tab>\r\n                \r\n                <mat-tab label=\"Education\">\r\n                  <div class=\"tab-content\">\r\n                    <div class=\"timeline\">\r\n                      <div class=\"timeline-item\" *ngFor=\"let edu of profile.education\">\r\n                        <div class=\"timeline-marker\"></div>\r\n                        <div class=\"timeline-content\">\r\n                          <div class=\"timeline-header\">\r\n                            <h3>{{ edu.degree }}</h3>\r\n                            <span class=\"timeline-period\">\r\n                              {{ edu.startDate }} - {{ edu.endDate }}\r\n                            </span>\r\n                          </div>\r\n                          <div class=\"timeline-institution\">\r\n                            <span>{{ edu.institution }}</span>\r\n                            <span class=\"education-field\">{{ edu.field }}</span>\r\n                          </div>\r\n                          <div class=\"timeline-description\" *ngIf=\"edu.description\">\r\n                            <p>{{ edu.description }}</p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </mat-tab>\r\n              </mat-tab-group>\r\n            </mat-card>\r\n\r\n            <!-- Recent Activity Card -->\r\n            <mat-card class=\"profile-card activity-card\">\r\n              <mat-card-header>\r\n                <mat-card-title>Recent Activity</mat-card-title>\r\n              </mat-card-header>\r\n              <mat-card-content>\r\n                <div class=\"activity-timeline\">\r\n                  <div class=\"activity-item\" *ngFor=\"let activity of profile.recentActivity\">\r\n                    <div class=\"activity-icon\">\r\n                      <i [class]=\"activity.icon\"></i>\r\n                    </div>\r\n                    <div class=\"activity-content\">\r\n                      <div class=\"activity-description\">{{ activity.description }}</div>\r\n                      <div class=\"activity-date\">{{ activity.date }}</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </mat-card-content>\r\n            </mat-card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      :host {\r\n        --primary: #8B5A2B;\r\n        --primary-light: #A67C52;\r\n        --primary-dark: #6B4423;\r\n        --accent: #D2B48C;\r\n        --accent-light: #E6D2B8;\r\n        --accent-dark: #9F8A6E;\r\n        --text-primary: #3E2723;\r\n        --text-secondary: #5D4037;\r\n        --background-light: #F5F0E6;\r\n        --card-bg: #FFFFFF;\r\n        --success: #4CAF50;\r\n        --warning: #FFC107;\r\n        --danger: #F44336;\r\n        --info: #2196F3;\r\n        --light-gray: #EEEEEE;\r\n        --border-radius: 10px;\r\n      }\r\n\r\n      .profile-container {\r\n        max-width: 1200px;\r\n        margin: 0 auto;\r\n        padding: 0;\r\n      }\r\n\r\n      /* Header Section */\r\n      .profile-header {\r\n        background: linear-gradient(135deg, var(--primary-light) 0%, var(--primary) 100%);\r\n        padding: 30px;\r\n        border-radius: var(--border-radius);\r\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n        margin-bottom: 30px;\r\n        color: white;\r\n      }\r\n\r\n      .header-content {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 30px;\r\n      }\r\n\r\n      .profile-avatar {\r\n        position: relative;\r\n      }\r\n\r\n      .avatar-circle {\r\n        width: 120px;\r\n        height: 120px;\r\n        background: var(--primary-dark);\r\n        border: 4px solid white;\r\n        border-radius: 50%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        font-size: 40px;\r\n        font-weight: bold;\r\n        color: white;\r\n        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n      }\r\n\r\n      .availability-badge {\r\n        position: absolute;\r\n        bottom: 5px;\r\n        right: 5px;\r\n        padding: 5px 10px;\r\n        border-radius: 20px;\r\n        font-size: 12px;\r\n        font-weight: 500;\r\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n      }\r\n\r\n      .availability-active {\r\n        background-color: var(--success);\r\n        color: white;\r\n      }\r\n\r\n      .availability-open {\r\n        background-color: var(--warning);\r\n        color: var(--text-primary);\r\n      }\r\n\r\n      .availability-inactive {\r\n        background-color: var(--danger);\r\n        color: white;\r\n      }\r\n\r\n      .profile-info {\r\n        flex: 1;\r\n      }\r\n\r\n      .profile-info h1 {\r\n        margin: 0;\r\n        font-size: 28px;\r\n        font-weight: 600;\r\n      }\r\n\r\n      .profile-info h2 {\r\n        margin: 5px 0 15px;\r\n        font-size: 18px;\r\n        font-weight: 400;\r\n        opacity: 0.9;\r\n      }\r\n\r\n      .profile-stats {\r\n        display: flex;\r\n        gap: 20px;\r\n        margin-bottom: 20px;\r\n      }\r\n\r\n      .stat {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 5px;\r\n        font-size: 14px;\r\n      }\r\n\r\n      .profile-actions {\r\n        display: flex;\r\n        gap: 10px;\r\n      }\r\n\r\n      .profile-actions button {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 5px;\r\n      }\r\n\r\n      /* Match Score */\r\n      .match-score {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        gap: 5px;\r\n      }\r\n\r\n      .score-circle {\r\n        position: relative;\r\n        width: 120px;\r\n        height: 120px;\r\n        border-radius: 50%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n      }\r\n\r\n      .score-value {\r\n        position: absolute;\r\n        font-size: 28px;\r\n        font-weight: bold;\r\n      }\r\n\r\n      .score-chart {\r\n        width: 100%;\r\n        height: 100%;\r\n        transform: rotate(-90deg);\r\n      }\r\n\r\n      .score-circle-bg {\r\n        fill: none;\r\n        stroke: rgba(255, 255, 255, 0.3);\r\n        stroke-width: 3;\r\n      }\r\n\r\n      .score-circle-fill {\r\n        fill: none;\r\n        stroke: white;\r\n        stroke-width: 3;\r\n        stroke-linecap: round;\r\n      }\r\n\r\n      /* Content Grid */\r\n      .content-grid {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1.5fr;\r\n        gap: 30px;\r\n      }\r\n\r\n      .profile-card {\r\n        background: var(--card-bg);\r\n        border-radius: var(--border-radius);\r\n        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);\r\n        margin-bottom: 30px;\r\n        overflow: hidden;\r\n      }\r\n\r\n      mat-card-header {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        padding: 16px 16px 0;\r\n      }\r\n\r\n      .card-action-btn {\r\n        margin-right: -8px;\r\n      }\r\n\r\n      mat-card-title {\r\n        color: var(--primary);\r\n        font-size: 18px;\r\n        font-weight: 600;\r\n        margin-bottom: 0;\r\n      }\r\n\r\n      mat-card-content {\r\n        padding: 16px;\r\n      }\r\n\r\n      /* Contact Card */\r\n      .contact-card .contact-item {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 10px;\r\n        margin-bottom: 12px;\r\n        color: var(--text-secondary);\r\n      }\r\n\r\n      .contact-item i {\r\n        color: var(--primary);\r\n        width: 20px;\r\n        text-align: center;\r\n      }\r\n\r\n      .social-links {\r\n        display: flex;\r\n        gap: 15px;\r\n        margin-top: 20px;\r\n      }\r\n\r\n      .social-links a {\r\n        width: 40px;\r\n        height: 40px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        background-color: var(--accent-light);\r\n        color: var(--primary);\r\n        border-radius: 50%;\r\n        transition: all 0.3s ease;\r\n      }\r\n\r\n      .social-links a:hover {\r\n        background-color: var(--primary);\r\n        color: white;\r\n        transform: translateY(-2px);\r\n      }\r\n\r\n      /* Skills Card */\r\n      .skills-categories {\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 20px;\r\n      }\r\n\r\n      .skill-category h4 {\r\n        margin: 0 0 10px;\r\n        color: var(--text-secondary);\r\n        font-size: 14px;\r\n      }\r\n\r\n      .skill-chips {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: 8px;\r\n      }\r\n\r\n      mat-chip {\r\n        background-color: var(--accent-light) !important;\r\n        color: var(--text-primary) !important;\r\n        font-weight: 500;\r\n        position: relative;\r\n        padding-right: 28px !important;\r\n      }\r\n\r\n      .skill-level {\r\n        position: absolute;\r\n        right: 8px;\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n        width: 12px;\r\n        height: 12px;\r\n        border-radius: 50%;\r\n      }\r\n\r\n      .level-beginner {\r\n        background-color: var(--info);\r\n      }\r\n\r\n      .level-intermediate {\r\n        background-color: var(--warning);\r\n      }\r\n\r\n      .level-expert {\r\n        background-color: var(--success);\r\n      }\r\n\r\n      /* Timeline Styling */\r\n      .timeline {\r\n        padding: 20px 0;\r\n      }\r\n\r\n      .timeline-item {\r\n        display: flex;\r\n        gap: 20px;\r\n        padding-bottom: 30px;\r\n        position: relative;\r\n      }\r\n\r\n      .timeline-item:not(:last-child)::after {\r\n        content: '';\r\n        position: absolute;\r\n        left: 6px;\r\n        top: 20px;\r\n        bottom: 0;\r\n        width: 2px;\r\n        background-color: var(--accent);\r\n      }\r\n\r\n      .timeline-marker {\r\n        width: 14px;\r\n        height: 14px;\r\n        border-radius: 50%;\r\n        background-color: var(--primary);\r\n        margin-top: 6px;\r\n        z-index: 1;\r\n      }\r\n\r\n      .timeline-content {\r\n        flex: 1;\r\n      }\r\n\r\n      .timeline-header {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: flex-start;\r\n      }\r\n\r\n      .timeline-header h3 {\r\n        margin: 0;\r\n        color: var(--primary);\r\n        font-weight: 600;\r\n        font-size: 16px;\r\n      }\r\n\r\n      .timeline-period {\r\n        font-size: 14px;\r\n        color: var(--text-secondary);\r\n        white-space: nowrap;\r\n      }\r\n\r\n      .timeline-company, .timeline-institution {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        margin: 5px 0 10px;\r\n        color: var(--text-secondary);\r\n        font-size: 14px;\r\n      }\r\n\r\n      .company-name, .education-field {\r\n        font-weight: 500;\r\n      }\r\n\r\n      .timeline-description p {\r\n        margin: 0;\r\n        color: var(--text-primary);\r\n        line-height: 1.5;\r\n      }\r\n\r\n      /* Activity Card */\r\n      .activity-timeline {\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 15px;\r\n      }\r\n\r\n      .activity-item {\r\n        display: flex;\r\n        gap: 15px;\r\n      }\r\n\r\n      .activity-icon {\r\n        width: 40px;\r\n        height: 40px;\r\n        border-radius: 50%;\r\n        background-color: var(--accent-light);\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        color: var(--primary);\r\n      }\r\n\r\n      .activity-content {\r\n        flex: 1;\r\n      }\r\n\r\n      .activity-description {\r\n        color: var(--text-primary);\r\n        margin-bottom: 5px;\r\n      }\r\n\r\n      .activity-date {\r\n        font-size: 12px;\r\n        color: var(--text-secondary);\r\n      }\r\n\r\n      /* Tab Styling */\r\n      ::ng-deep .mat-mdc-tab-header {\r\n        border-bottom: 1px solid var(--accent-light);\r\n      }\r\n\r\n      ::ng-deep .mat-mdc-tab.mdc-tab--active .mdc-tab__text-label {\r\n        color: var(--primary);\r\n        font-weight: 500;\r\n      }\r\n\r\n      ::ng-deep .mat-mdc-tab-header .mat-mdc-tab-label-container {\r\n        padding: 0 16px;\r\n      }\r\n\r\n      .tab-content {\r\n        padding: 16px;\r\n      }\r\n\r\n      /* Responsive Design */\r\n      @media screen and (max-width: 992px) {\r\n        .content-grid {\r\n          grid-template-columns: 1fr;\r\n        }\r\n\r\n        .header-content {\r\n          flex-direction: column;\r\n          text-align: center;\r\n        }\r\n\r\n        .profile-stats {\r\n          justify-content: center;\r\n        }\r\n\r\n        .profile-actions {\r\n          justify-content: center;\r\n        }\r\n\r\n        .match-score {\r\n          margin-top: 20px;\r\n        }\r\n      }\r\n\r\n      @media screen and (max-width: 768px) {\r\n        .profile-header {\r\n          padding: 20px;\r\n        }\r\n\r\n        .timeline-header {\r\n          flex-direction: column;\r\n          gap: 5px;\r\n        }\r\n\r\n        .timeline-company, .timeline-institution {\r\n          flex-direction: column;\r\n          gap: 5px;\r\n        }\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  profile!: ProfileData;\r\n  skillCategories: string[] = [];\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    // Sample data to display (would normally come from a service)\r\n    this.profile = {\r\n      firstName: 'John',\r\n      lastName: 'Doe',\r\n      headline: 'Senior Software Engineer | Full Stack Developer | AI Specialist',\r\n      summary: 'Passionate and dedicated software engineer with over 8 years of experience designing and implementing scalable applications. Specialized in AI and machine learning solutions across multiple industries. Strong advocate for clean code and test-driven development. Looking for challenging opportunities where I can leverage my expertise in creating impactful solutions.',\r\n      email: 'john.doe@example.com',\r\n      phone: '+1 (555) 123-4567',\r\n      location: 'San Francisco, CA',\r\n      currentJobTitle: 'Senior Software Engineer',\r\n      yearsOfExperience: 8,\r\n      preferredJobType: 'full-time',\r\n      preferredLocation: 'San Francisco or Remote',\r\n      linkedinUrl: 'https://linkedin.com/in/johndoe',\r\n      githubUrl: 'https://github.com/johndoe',\r\n      portfolioUrl: 'https://johndoe.dev',\r\n      availabilityStatus: 'open_to_opportunities',\r\n      matchScore: 85,\r\n      skills: [\r\n        { name: 'JavaScript', level: 'Expert', category: 'Programming Languages' },\r\n        { name: 'TypeScript', level: 'Expert', category: 'Programming Languages' },\r\n        { name: 'Python', level: 'Intermediate', category: 'Programming Languages' },\r\n        { name: 'Angular', level: 'Expert', category: 'Frameworks' },\r\n        { name: 'React', level: 'Intermediate', category: 'Frameworks' },\r\n        { name: 'Node.js', level: 'Expert', category: 'Frameworks' },\r\n        { name: 'MongoDB', level: 'Intermediate', category: 'Databases' },\r\n        { name: 'PostgreSQL', level: 'Expert', category: 'Databases' },\r\n        { name: 'TensorFlow', level: 'Intermediate', category: 'AI/ML' },\r\n        { name: 'PyTorch', level: 'Beginner', category: 'AI/ML' },\r\n        { name: 'Docker', level: 'Intermediate', category: 'DevOps' },\r\n        { name: 'AWS', level: 'Intermediate', category: 'DevOps' },\r\n      ],\r\n      education: [\r\n        {\r\n          institution: 'Stanford University',\r\n          degree: 'Master of Science',\r\n          field: 'Computer Science',\r\n          startDate: 'Aug 2014',\r\n          endDate: 'May 2016',\r\n          description: 'Specialized in Artificial Intelligence and Machine Learning. Thesis on Neural Network Optimization.'\r\n        },\r\n        {\r\n          institution: 'University of California, Berkeley',\r\n          degree: 'Bachelor of Science',\r\n          field: 'Computer Engineering',\r\n          startDate: 'Aug 2010',\r\n          endDate: 'May 2014',\r\n          description: 'Minor in Mathematics. Dean\\'s List all semesters.'\r\n        }\r\n      ],\r\n      experience: [\r\n        {\r\n          company: 'TechCorp Inc.',\r\n          position: 'Senior Software Engineer',\r\n          startDate: 'Jan 2020',\r\n          endDate: null,\r\n          location: 'San Francisco, CA',\r\n          description: 'Leading a team of 5 engineers developing cloud-based AI solutions. Architected and implemented a scalable microservices infrastructure using Angular, Node.js, and AWS.'\r\n        },\r\n        {\r\n          company: 'DataDrive Systems',\r\n          position: 'Software Engineer',\r\n          startDate: 'Jun 2016',\r\n          endDate: 'Dec 2019',\r\n          location: 'San Jose, CA',\r\n          description: 'Developed data visualization tools and analytics dashboards using React and D3.js. Improved system performance by 40% through optimization techniques.'\r\n        },\r\n        {\r\n          company: 'Innovate Labs',\r\n          position: 'Software Development Intern',\r\n          startDate: 'May 2015',\r\n          endDate: 'Aug 2015',\r\n          location: 'Mountain View, CA',\r\n          description: 'Assisted in developing RESTful APIs and implemented front-end components using Angular.js.'\r\n        }\r\n      ],\r\n      recentActivity: [\r\n        {\r\n          type: 'application',\r\n          description: 'Applied for Senior Full Stack Developer at CloudTech Solutions',\r\n          date: '2 days ago',\r\n          icon: 'fas fa-paper-plane'\r\n        },\r\n        {\r\n          type: 'skill',\r\n          description: 'Added new skill: GraphQL',\r\n          date: '1 week ago',\r\n          icon: 'fas fa-plus-circle'\r\n        },\r\n        {\r\n          type: 'interview',\r\n          description: 'Completed technical interview with Nexus Software',\r\n          date: '2 weeks ago',\r\n          icon: 'fas fa-comments'\r\n        },\r\n        {\r\n          type: 'profile',\r\n          description: 'Updated professional summary',\r\n          date: '3 weeks ago',\r\n          icon: 'fas fa-user-edit'\r\n        }\r\n      ]\r\n    };\r\n\r\n    // Extract unique skill categories\r\n    this.skillCategories = [...new Set(this.profile.skills.map(skill => skill.category))];\r\n  }\r\n\r\n  getSkillsByCategory(category: string): Skill[] {\r\n    return this.profile.skills.filter(skill => skill.category === category);\r\n  }\r\n\r\n  getAvailabilityClass(status: string): string {\r\n    switch (status) {\r\n      case 'actively_looking':\r\n        return 'availability-active';\r\n      case 'open_to_opportunities':\r\n        return 'availability-open';\r\n      case 'not_available':\r\n        return 'availability-inactive';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  getAvailabilityText(status: string): string {\r\n    switch (status) {\r\n      case 'actively_looking':\r\n        return 'Actively Looking';\r\n      case 'open_to_opportunities':\r\n        return 'Open to Opportunities';\r\n      case 'not_available':\r\n        return 'Not Available';\r\n      default:\r\n        return status;\r\n    }\r\n  }\r\n}"],
  "mappings": "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",
  "names": []
}
