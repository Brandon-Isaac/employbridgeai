{
  "version": 3,
  "sources": ["src/app/admin/components/accuracy-metrics/accuracy-metrics.component.ts", "src/app/admin/components/accuracy-metrics/accuracy-metrics.component.html"],
  "sourcesContent": ["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { trigger, transition, style, animate } from '@angular/animations';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\n\r\ninterface Metric {\r\n  id: string;\r\n  name: string;\r\n  value: number;\r\n  target: number;\r\n  trend: 'up' | 'down' | 'stable';\r\n  lastUpdated: Date;\r\n  icon: string;\r\n  color: string;\r\n  category: 'matching' | 'assessment' | 'recommendation' | 'satisfaction';\r\n}\r\n\r\n@Component({\r\n  selector: 'app-accuracy-metrics',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    MatCardModule,\r\n    MatTableModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    FormsModule,\r\n    MatToolbarModule,\r\n    MatDividerModule,\r\n    MatProgressBarModule,\r\n    MatMenuModule,\r\n    MatTooltipModule,\r\n    MatPaginatorModule\r\n  ],\r\n  animations: [\r\n    trigger('fadeIn', [\r\n      transition(':enter', [\r\n        style({ opacity: 0 }),\r\n        animate('300ms ease-in', style({ opacity: 1 }))\r\n      ])\r\n    ]),\r\n    trigger('cardAnimation', [\r\n      transition(':enter', [\r\n        style({ transform: 'translateY(20px)', opacity: 0 }),\r\n        animate('300ms ease-out', style({ transform: 'translateY(0)', opacity: 1 }))\r\n      ])\r\n    ])\r\n  ],\r\n  templateUrl: `./accuracy-metrics.component.html`,\r\n  styleUrl: `./accuracy-metrics.component.css`\r\n})\r\nexport class AccuracyMetricsComponent implements OnInit {\r\n  // Configuration\r\n  timePeriods = [\r\n    { value: '7', label: 'Last 7 days' },\r\n    { value: '14', label: 'Last 14 days' },\r\n    { value: '30', label: 'Last 30 days' },\r\n    { value: '90', label: 'Last 90 days' }\r\n  ];\r\n\r\n  metricCategories = [\r\n    { value: 'matching', label: 'Job Matching' },\r\n    { value: 'assessment', label: 'Skill Assessment' },\r\n    { value: 'recommendation', label: 'Recommendations' },\r\n    { value: 'satisfaction', label: 'Satisfaction' }\r\n  ];\r\n\r\n  displayedColumns: string[] = ['name', 'value', 'trend', 'actions'];\r\n  \r\n  // State\r\n  selectedPeriod = '30';\r\n  selectedMetric = 'all';\r\n  isLoading = false;\r\n\r\n  // Sample data - in a real app this would come from a service\r\n  overviewMetrics = [\r\n    {\r\n      id: '1',\r\n      name: 'Job Matching Accuracy',\r\n      description: 'How well jobs match candidate skills',\r\n      value: 85,\r\n      target: 80,\r\n      trend: 'up',\r\n      change: 2.5,\r\n      lastUpdated: new Date(),\r\n      icon: 'handshake',\r\n      color: '#3f51b5'\r\n    },\r\n    {\r\n      id: '2',\r\n      name: 'Skill Assessment Accuracy',\r\n      description: 'Accuracy of skill level assessments',\r\n      value: 92,\r\n      target: 90,\r\n      trend: 'up',\r\n      change: 1.2,\r\n      lastUpdated: new Date(),\r\n      icon: 'star',\r\n      color: '#4caf50'\r\n    },\r\n    {\r\n      id: '3',\r\n      name: 'Recommendation Accuracy',\r\n      description: 'Quality of learning recommendations',\r\n      value: 78,\r\n      target: 85,\r\n      trend: 'down',\r\n      change: -3.1,\r\n      lastUpdated: new Date(),\r\n      icon: 'lightbulb_outline',\r\n      color: '#ff9800'\r\n    }\r\n  ];\r\n\r\n  metrics: Metric[] = [\r\n    {\r\n      id: '1',\r\n      name: 'Job Matching Accuracy',\r\n      value: 85,\r\n      target: 80,\r\n      trend: 'up',\r\n      lastUpdated: new Date(),\r\n      icon: 'handshake',\r\n      color: '#3f51b5',\r\n      category: 'matching'\r\n    },\r\n    {\r\n      id: '2',\r\n      name: 'Skill Assessment Accuracy',\r\n      value: 92,\r\n      target: 90,\r\n      trend: 'up',\r\n      lastUpdated: new Date(),\r\n      icon: 'star',\r\n      color: '#4caf50',\r\n      category: 'assessment'\r\n    },\r\n    {\r\n      id: '3',\r\n      name: 'Recommendation Accuracy',\r\n      value: 78,\r\n      target: 85,\r\n      trend: 'down',\r\n      lastUpdated: new Date(),\r\n      icon: 'lightbulb_outline',\r\n      color: '#ff9800',\r\n      category: 'recommendation'\r\n    },\r\n    {\r\n      id: '4',\r\n      name: 'Candidate Satisfaction',\r\n      value: 88,\r\n      target: 85,\r\n      trend: 'stable',\r\n      lastUpdated: new Date(),\r\n      icon: 'mood',\r\n      color: '#9c27b0',\r\n      category: 'satisfaction'\r\n    },\r\n    {\r\n      id: '5',\r\n      name: 'Employer Satisfaction',\r\n      value: 82,\r\n      target: 85,\r\n      trend: 'up',\r\n      lastUpdated: new Date(),\r\n      icon: 'business',\r\n      color: '#2196f3',\r\n      category: 'satisfaction'\r\n    },\r\n    {\r\n      id: '6',\r\n      name: 'Skill Gap Identification',\r\n      value: 91,\r\n      target: 90,\r\n      trend: 'up',\r\n      lastUpdated: new Date(),\r\n      icon: 'search',\r\n      color: '#009688',\r\n      category: 'assessment'\r\n    },\r\n    {\r\n      id: '7',\r\n      name: 'Job Recommendation Relevance',\r\n      value: 84,\r\n      target: 85,\r\n      trend: 'stable',\r\n      lastUpdated: new Date(),\r\n      icon: 'work_outline',\r\n      color: '#ff5722',\r\n      category: 'recommendation'\r\n    }\r\n  ];\r\n\r\n  ngOnInit(): void {\r\n    this.loadMetrics();\r\n  }\r\n\r\n\r\n  get filteredMetrics() {\r\n    if (this.selectedMetric === 'all') return this.metrics;\r\n    return this.metrics.filter(metric => metric.category === this.selectedMetric);\r\n  }\r\n\r\n  loadMetrics(): void {\r\n    this.isLoading = true;\r\n    // Simulate API call\r\n    setTimeout(() => {\r\n      this.isLoading = false;\r\n    }, 500);\r\n  }\r\n\r\n  refreshMetrics(): void {\r\n    this.isLoading = true;\r\n    // Simulate refresh\r\n    setTimeout(() => {\r\n      this.isLoading = false;\r\n    }, 1000);\r\n  }\r\n\r\n  exportMetrics(): void {\r\n    console.log('Exporting metrics data...');\r\n    // Implement export functionality\r\n  }\r\n\r\n  viewDetails(metric: Metric): void {\r\n    console.log('Viewing details for:', metric.name);\r\n    // Navigate to detail view\r\n  }\r\n\r\n  adjustTarget(metric: Metric): void {\r\n    console.log('Adjusting target for:', metric.name);\r\n    // Open target adjustment dialog\r\n  }\r\n\r\n  viewHistory(metric: Metric): void {\r\n    console.log('Viewing history for:', metric.name);\r\n    // Navigate to history view\r\n  }\r\n\r\n  getTrendLabel(trend: Metric['trend']): string {\r\n    const trends = {\r\n      up: 'Improving',\r\n      down: 'Declining',\r\n      stable: 'Stable'\r\n    };\r\n    return trends[trend];\r\n  }\r\n\r\n  getCategoryName(category: Metric['category']): string {\r\n    const found = this.metricCategories.find(c => c.value === category);\r\n    return found ? found.label : '';\r\n  }\r\n\r\n  getIcon(iconName: string): string {\r\n    // Map FontAwesome icons to Material icons\r\n    const iconMap: Record<string, string> = {\r\n      'fa-handshake': 'handshake',\r\n      'fa-star': 'star',\r\n      'fa-lightbulb': 'lightbulb_outline',\r\n      'fa-smile': 'mood',\r\n      'fa-briefcase': 'business',\r\n      'fa-search': 'search',\r\n      'fa-work': 'work_outline'\r\n    };\r\n    return iconMap[iconName] || iconName;\r\n  }\r\n}", "<div class=\"dashboard-container\" [@fadeIn]>\r\n    <header class=\"dashboard-header\">\r\n      <div class=\"header-content\">\r\n        <h1 class=\"dashboard-title\">Accuracy Metrics</h1>\r\n        <p class=\"dashboard-subtitle\">Track and analyze system performance metrics</p>\r\n      </div>\r\n      \r\n      <div class=\"header-controls\">\r\n        <mat-form-field appearance=\"outline\" class=\"period-selector\">\r\n          <mat-label>Time Period</mat-label>\r\n          <mat-select [(ngModel)]=\"selectedPeriod\">\r\n            <mat-option *ngFor=\"let period of timePeriods\" [value]=\"period.value\">\r\n              {{ period.label }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        \r\n        <button mat-stroked-button (click)=\"refreshMetrics()\" class=\"refresh-button\">\r\n          <mat-icon>refresh</mat-icon>\r\n          Refresh\r\n        </button>\r\n      </div>\r\n    </header>\r\n\r\n    <section class=\"metrics-summary\">\r\n      <mat-card *ngFor=\"let metric of overviewMetrics\" [@cardAnimation] class=\"summary-card\">\r\n        <div class=\"card-header\">\r\n          <div class=\"metric-icon-container\" [style.background-color]=\"metric.color + '20'\">\r\n            <mat-icon [style.color]=\"metric.color\">{{ metric.icon }}</mat-icon>\r\n          </div>\r\n          <div class=\"metric-title\">\r\n            <h3>{{ metric.name }}</h3>\r\n            <p>{{ metric.description }}</p>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"metric-value-container\">\r\n          <span class=\"current-value\" [style.color]=\"metric.color\">\r\n            {{ metric.value }}%\r\n          </span>\r\n          <span class=\"target-value\">Target: {{ metric.target }}%</span>\r\n        </div>\r\n        \r\n        <mat-progress-bar\r\n          mode=\"determinate\"\r\n          [value]=\"metric.value\"\r\n          [color]=\"metric.value >= metric.target ? 'primary' : 'warn'\">\r\n        </mat-progress-bar>\r\n        \r\n        <div class=\"metric-trend-container\">\r\n          <span class=\"trend-indicator\" [class]=\"'trend-' + metric.trend\">\r\n            <mat-icon>\r\n              {{ metric.trend === 'up' ? 'arrow_upward' : \r\n                 metric.trend === 'down' ? 'arrow_downward' : 'remove' }}\r\n            </mat-icon>\r\n            {{ metric.change }}% from last period\r\n          </span>\r\n          <span class=\"last-updated\">\r\n            Updated: {{ metric.lastUpdated | date:'MMM d, h:mm a' }}\r\n          </span>\r\n        </div>\r\n      </mat-card>\r\n    </section>\r\n\r\n    <section class=\"detailed-metrics\">\r\n      <mat-card class=\"metrics-table-card\">\r\n        <mat-card-header>\r\n          <mat-card-title>Detailed Metrics</mat-card-title>\r\n          <mat-card-subtitle>Performance across all measured metrics</mat-card-subtitle>\r\n        </mat-card-header>\r\n        \r\n        <mat-divider></mat-divider>\r\n        \r\n        <mat-card-content>\r\n          <div class=\"table-controls\">\r\n            <mat-form-field appearance=\"outline\" class=\"metric-filter\">\r\n              <mat-label>Filter Metrics</mat-label>\r\n              <mat-select [(ngModel)]=\"selectedMetric\">\r\n                <mat-option value=\"all\">All Metrics</mat-option>\r\n                <mat-option *ngFor=\"let category of metricCategories\" [value]=\"category.value\">\r\n                  {{ category.label }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n            \r\n            <button mat-stroked-button (click)=\"exportMetrics()\" class=\"export-button\">\r\n              <mat-icon>download</mat-icon>\r\n              Export\r\n            </button>\r\n          </div>\r\n          \r\n          <div class=\"table-wrapper\">\r\n            <table mat-table [dataSource]=\"filteredMetrics\" class=\"metrics-table\">\r\n              <!-- Metric Name Column -->\r\n              <ng-container matColumnDef=\"name\">\r\n                <th mat-header-cell *matHeaderCellDef>Metric</th>\r\n                <td mat-cell *matCellDef=\"let metric\">\r\n                  <div class=\"metric-cell\">\r\n                    <div class=\"metric-icon\" [style.background-color]=\"metric.color + '20'\">\r\n                      <mat-icon [style.color]=\"metric.color\">{{ getIcon(metric.icon) }}</mat-icon>\r\n                    </div>\r\n                    <div class=\"metric-info\">\r\n                      <div class=\"metric-name\">{{ metric.name }}</div>\r\n                      <div class=\"metric-category\">{{ getCategoryName(metric.category) }}</div>\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n              </ng-container>\r\n              \r\n              <!-- Value Column -->\r\n              <ng-container matColumnDef=\"value\">\r\n                <th mat-header-cell *matHeaderCellDef>Value</th>\r\n                <td mat-cell *matCellDef=\"let metric\">\r\n                  <div class=\"value-display\">\r\n                    <span class=\"value-percent\" [style.color]=\"metric.value >= metric.target ? 'var(--success)' : 'var(--warn)'\">\r\n                      {{ metric.value }}%\r\n                    </span>\r\n                    <div class=\"progress-wrapper\">\r\n                      <mat-progress-bar\r\n                        mode=\"determinate\"\r\n                        [value]=\"metric.value\"\r\n                        [color]=\"metric.value >= metric.target ? 'primary' : 'warn'\"\r\n                        class=\"compact-progress\">\r\n                      </mat-progress-bar>\r\n                      <span class=\"target-label\">{{ metric.target }}% target</span>\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n              </ng-container>\r\n              \r\n              <!-- Trend Column -->\r\n              <ng-container matColumnDef=\"trend\">\r\n                <th mat-header-cell *matHeaderCellDef>Trend</th>\r\n                <td mat-cell *matCellDef=\"let metric\">\r\n                  <div class=\"trend-badge\" [class]=\"'trend-' + metric.trend\">\r\n                    <mat-icon>\r\n                      {{ metric.trend === 'up' ? 'arrow_upward' : \r\n                         metric.trend === 'down' ? 'arrow_downward' : 'remove' }}\r\n                    </mat-icon>\r\n                    <span>{{ getTrendLabel(metric.trend) }}</span>\r\n                  </div>\r\n                </td>\r\n              </ng-container>\r\n              \r\n              <!-- Actions Column -->\r\n              <ng-container matColumnDef=\"actions\">\r\n                <th mat-header-cell *matHeaderCellDef></th>\r\n                <td mat-cell *matCellDef=\"let metric\">\r\n                  <button mat-icon-button [matMenuTriggerFor]=\"metricMenu\">\r\n                    <mat-icon>more_vert</mat-icon>\r\n                  </button>\r\n                  <mat-menu #metricMenu=\"matMenu\">\r\n                    <button mat-menu-item (click)=\"viewDetails(metric)\">\r\n                      <mat-icon>insights</mat-icon>\r\n                      View Details\r\n                    </button>\r\n                    <button mat-menu-item (click)=\"adjustTarget(metric)\">\r\n                      <mat-icon>adjust</mat-icon>\r\n                      Adjust Target\r\n                    </button>\r\n                    <button mat-menu-item (click)=\"viewHistory(metric)\">\r\n                      <mat-icon>history</mat-icon>\r\n                      View History\r\n                    </button>\r\n                  </mat-menu>\r\n                </td>\r\n              </ng-container>\r\n              \r\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n            </table>\r\n            \r\n            <mat-paginator \r\n              [pageSizeOptions]=\"[5, 10, 20]\"\r\n              showFirstLastButtons\r\n              aria-label=\"Select page of metrics\">\r\n            </mat-paginator>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </section>\r\n  </div>"],
  "mappings": "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",
  "names": []
}
