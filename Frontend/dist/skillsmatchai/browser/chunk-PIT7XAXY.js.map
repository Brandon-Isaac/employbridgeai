{
  "version": 3,
  "sources": ["src/app/job-seeker/components/job-matches/job-matches.component.ts"],
  "sourcesContent": ["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\n\r\ninterface JobMatch {\r\n  id: string;\r\n  title: string;\r\n  company: string;\r\n  location: string;\r\n  matchScore: number;\r\n  skills: string[];\r\n  postedDate: Date;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-job-matches',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatChipsModule,\r\n    MatProgressBarModule,\r\n  ],\r\n  template: `\r\n    <div class=\"job-matches-container\">\r\n      <h2>Your Job Matches</h2>\r\n      <div class=\"job-list\">\r\n        <mat-card *ngFor=\"let job of jobMatches\" class=\"job-card\">\r\n          <mat-card-header>\r\n            <mat-card-title>{{ job.title }}</mat-card-title>\r\n            <mat-card-subtitle\r\n              >{{ job.company }} - {{ job.location }}</mat-card-subtitle\r\n            >\r\n          </mat-card-header>\r\n          <mat-card-content>\r\n            <div class=\"match-score\">\r\n              <span>Match Score: {{ job.matchScore }}%</span>\r\n              <mat-progress-bar [mode]=\"'determinate'\" [value]=\"job.matchScore\">\r\n              </mat-progress-bar>\r\n            </div>\r\n            <div class=\"skills\">\r\n              <mat-chip-set>\r\n                <mat-chip *ngFor=\"let skill of job.skills\">\r\n                  {{ skill }}\r\n                </mat-chip>\r\n              </mat-chip-set>\r\n            </div>\r\n            <div class=\"posted-date\">Posted: {{ job.postedDate | date }}</div>\r\n          </mat-card-content>\r\n          <mat-card-actions>\r\n            <button mat-button color=\"primary\" (click)=\"viewJobDetails(job)\">\r\n              View Details\r\n            </button>\r\n            <button mat-button color=\"accent\" (click)=\"applyForJob(job)\">\r\n              Apply Now\r\n            </button>\r\n          </mat-card-actions>\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      .job-matches-container {\r\n        padding: 20px;\r\n      }\r\n\r\n      .job-list {\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n        gap: 20px;\r\n        margin-top: 20px;\r\n      }\r\n\r\n      .job-card {\r\n        height: 100%;\r\n      }\r\n\r\n      .match-score {\r\n        margin: 10px 0;\r\n      }\r\n\r\n      .skills {\r\n        margin: 10px 0;\r\n      }\r\n\r\n      .posted-date {\r\n        color: #666;\r\n        font-size: 0.9em;\r\n        margin-top: 10px;\r\n      }\r\n\r\n      mat-card-actions {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        padding: 16px;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class JobMatchesComponent implements OnInit {\r\n  jobMatches: JobMatch[] = [\r\n    {\r\n      id: '1',\r\n      title: 'Senior Frontend Developer',\r\n      company: 'TechCorp',\r\n      location: 'New York, NY',\r\n      matchScore: 95,\r\n      skills: ['Angular', 'TypeScript', 'RxJS', 'NgRx'],\r\n      postedDate: new Date('2024-03-15'),\r\n    },\r\n    {\r\n      id: '2',\r\n      title: 'Full Stack Developer',\r\n      company: 'InnovateTech',\r\n      location: 'San Francisco, CA',\r\n      matchScore: 88,\r\n      skills: ['Angular', 'Node.js', 'MongoDB', 'AWS'],\r\n      postedDate: new Date('2024-03-10'),\r\n    },\r\n    {\r\n      id: '3',\r\n      title: 'UI/UX Developer',\r\n      company: 'DesignHub',\r\n      location: 'Chicago, IL',\r\n      matchScore: 82,\r\n      skills: ['Angular', 'SCSS', 'Figma', 'UI/UX'],\r\n      postedDate: new Date('2024-03-05'),\r\n    },\r\n  ];\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  viewJobDetails(job: JobMatch): void {\r\n    // TODO: Implement job details view\r\n    console.log('Viewing job details:', job);\r\n  }\r\n\r\n  applyForJob(job: JobMatch): void {\r\n    // TODO: Implement job application\r\n    console.log('Applying for job:', job);\r\n  }\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
