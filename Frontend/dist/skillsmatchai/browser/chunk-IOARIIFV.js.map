{
  "version": 3,
  "sources": ["src/app/job-seeker/components/portfolio/portfolio.component.ts"],
  "sourcesContent": ["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\n\r\ninterface Project {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  technologies: string[];\r\n  startDate: Date;\r\n  endDate?: Date;\r\n  link?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-portfolio',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatExpansionModule,\r\n    MatChipsModule,\r\n  ],\r\n  template: `\r\n    <div class=\"portfolio-container\">\r\n      <mat-card>\r\n        <mat-card-header>\r\n          <mat-card-title>Your Portfolio</mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <form\r\n            [formGroup]=\"projectForm\"\r\n            (ngSubmit)=\"addProject()\"\r\n            class=\"project-form\"\r\n          >\r\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Project Title</mat-label>\r\n              <input matInput formControlName=\"title\" required />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Description</mat-label>\r\n              <textarea\r\n                matInput\r\n                formControlName=\"description\"\r\n                rows=\"4\"\r\n                required\r\n              ></textarea>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Technologies</mat-label>\r\n              <mat-chip-grid #chipGrid>\r\n                <mat-chip-row\r\n                  *ngFor=\"let tech of technologies\"\r\n                  (removed)=\"removeTechnology(tech)\"\r\n                >\r\n                  {{ tech }}\r\n                  <button matChipRemove>\r\n                    <mat-icon>cancel</mat-icon>\r\n                  </button>\r\n                </mat-chip-row>\r\n              </mat-chip-grid>\r\n              <input\r\n                placeholder=\"New technology...\"\r\n                [matChipInputFor]=\"chipGrid\"\r\n                (matChipInputTokenEnd)=\"addTechnology($event)\"\r\n              />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Project Link</mat-label>\r\n              <input matInput formControlName=\"link\" type=\"url\" />\r\n            </mat-form-field>\r\n\r\n            <button\r\n              mat-raised-button\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              [disabled]=\"!projectForm.valid\"\r\n            >\r\n              Add Project\r\n            </button>\r\n          </form>\r\n\r\n          <mat-accordion class=\"projects-list\">\r\n            <mat-expansion-panel *ngFor=\"let project of projects\">\r\n              <mat-expansion-panel-header>\r\n                <mat-panel-title>{{ project.title }}</mat-panel-title>\r\n                <mat-panel-description>\r\n                  {{ project.technologies.join(', ') }}\r\n                </mat-panel-description>\r\n              </mat-expansion-panel-header>\r\n\r\n              <p>{{ project.description }}</p>\r\n              <div class=\"project-details\">\r\n                <span\r\n                  >Duration: {{ project.startDate | date }} -\r\n                  {{\r\n                    project.endDate ? (project.endDate | date) : 'Present'\r\n                  }}</span\r\n                >\r\n                <a\r\n                  *ngIf=\"project.link\"\r\n                  [href]=\"project.link\"\r\n                  target=\"_blank\"\r\n                  mat-button\r\n                  color=\"primary\"\r\n                >\r\n                  View Project\r\n                </a>\r\n              </div>\r\n\r\n              <mat-action-row>\r\n                <button\r\n                  mat-button\r\n                  color=\"warn\"\r\n                  (click)=\"deleteProject(project)\"\r\n                >\r\n                  Delete\r\n                </button>\r\n              </mat-action-row>\r\n            </mat-expansion-panel>\r\n          </mat-accordion>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      .portfolio-container {\r\n        padding: 20px;\r\n      }\r\n      .project-form {\r\n        margin-bottom: 20px;\r\n      }\r\n      .full-width {\r\n        width: 100%;\r\n        margin-bottom: 16px;\r\n      }\r\n      .projects-list {\r\n        margin-top: 20px;\r\n      }\r\n      .project-details {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        margin-top: 16px;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class PortfolioComponent implements OnInit {\r\n  projectForm: FormGroup;\r\n  technologies: string[] = [];\r\n  projects: Project[] = [\r\n    {\r\n      id: '1',\r\n      title: 'E-commerce Platform',\r\n      description:\r\n        'A full-featured e-commerce platform built with Angular and Node.js',\r\n      technologies: ['Angular', 'Node.js', 'MongoDB', 'Express'],\r\n      startDate: new Date('2023-01-01'),\r\n      link: 'https://github.com/example/ecommerce',\r\n    },\r\n    {\r\n      id: '2',\r\n      title: 'Task Management App',\r\n      description:\r\n        'A collaborative task management application with real-time updates',\r\n      technologies: ['React', 'Firebase', 'Redux'],\r\n      startDate: new Date('2023-06-01'),\r\n      endDate: new Date('2023-12-31'),\r\n    },\r\n  ];\r\n\r\n  constructor(private fb: FormBuilder) {\r\n    this.projectForm = this.fb.group({\r\n      title: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      link: [''],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Load projects from backend\r\n  }\r\n\r\n  addProject(): void {\r\n    if (this.projectForm.valid) {\r\n      const newProject: Project = {\r\n        id: Date.now().toString(),\r\n        ...this.projectForm.value,\r\n        technologies: [...this.technologies],\r\n        startDate: new Date(),\r\n      };\r\n      this.projects.push(newProject);\r\n      this.projectForm.reset();\r\n      this.technologies = [];\r\n    }\r\n  }\r\n\r\n  deleteProject(project: Project): void {\r\n    const index = this.projects.findIndex((p) => p.id === project.id);\r\n    if (index !== -1) {\r\n      this.projects.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  addTechnology(event: any): void {\r\n    const value = (event.value || '').trim();\r\n    if (value) {\r\n      this.technologies.push(value);\r\n      event.chipInput!.clear();\r\n    }\r\n  }\r\n\r\n  removeTechnology(tech: string): void {\r\n    const index = this.technologies.indexOf(tech);\r\n    if (index >= 0) {\r\n      this.technologies.splice(index, 1);\r\n    }\r\n  }\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
