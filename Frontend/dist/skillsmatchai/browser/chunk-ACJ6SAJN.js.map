{
  "version": 3,
  "sources": ["src/app/admin/components/system-monitoring/system-monitoring.component.ts", "src/app/admin/components/system-monitoring/system-monitoring.component.html"],
  "sourcesContent": ["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { trigger, state, style, animate, transition } from '@angular/animations';\r\n\r\ninterface SystemMetric {\r\n  id: string;\r\n  name: string;\r\n  value: number;\r\n  unit: string;\r\n  status: 'normal' | 'warning' | 'critical';\r\n  trend: 'up' | 'down' | 'stable';\r\n  icon: string;\r\n  threshold: number;\r\n  lastUpdated: Date;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-system-monitoring',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    MatCardModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatProgressBarModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatDividerModule,\r\n    MatMenuModule\r\n  ],\r\n  animations: [\r\n    trigger('fadeIn', [\r\n      transition(':enter', [\r\n        style({ opacity: 0 }),\r\n        animate('400ms ease-in', style({ opacity: 1 }))\r\n      ])\r\n    ]),\r\n    trigger('cardHover', [\r\n      state('normal', style({\r\n        transform: 'translateY(0)',\r\n        boxShadow: '0 4px 12px rgba(0, 0, 0, 0.08)'\r\n      })),\r\n      state('hovered', style({\r\n        transform: 'translateY(-5px)',\r\n        boxShadow: '0 8px 24px rgba(0, 0, 0, 0.12)'\r\n      })),\r\n      transition('normal <=> hovered', animate('200ms ease-in-out'))\r\n    ])\r\n  ],\r\n  templateUrl: `./system-monitoring.component.html`,\r\n  styleUrl: `./system-monitoring.component.css`,\r\n})\r\nexport class SystemMonitoringComponent implements OnInit {\r\n  metrics: SystemMetric[] = [\r\n    {\r\n      id: '1',\r\n      name: 'CPU Usage',\r\n      value: 75,\r\n      unit: '%',\r\n      status: 'warning',\r\n      trend: 'up',\r\n      icon: 'fa-microchip',\r\n      threshold: 80,\r\n      lastUpdated: new Date()\r\n    },\r\n    {\r\n      id: '2',\r\n      name: 'Memory Usage',\r\n      value: 60,\r\n      unit: '%',\r\n      status: 'normal',\r\n      trend: 'stable',\r\n      icon: 'fa-memory',\r\n      threshold: 85,\r\n      lastUpdated: new Date()\r\n    },\r\n    {\r\n      id: '3',\r\n      name: 'Disk Space',\r\n      value: 85,\r\n      unit: '%',\r\n      status: 'warning',\r\n      trend: 'up',\r\n      icon: 'fa-hdd',\r\n      threshold: 90,\r\n      lastUpdated: new Date()\r\n    },\r\n    {\r\n      id: '4',\r\n      name: 'Network Traffic',\r\n      value: 45,\r\n      unit: 'Mbps',\r\n      status: 'normal',\r\n      trend: 'down',\r\n      icon: 'fa-network-wired',\r\n      threshold: 100,\r\n      lastUpdated: new Date()\r\n    },\r\n    {\r\n      id: '5',\r\n      name: 'Database Connections',\r\n      value: 32,\r\n      unit: '',\r\n      status: 'normal',\r\n      trend: 'stable',\r\n      icon: 'fa-database',\r\n      threshold: 50,\r\n      lastUpdated: new Date()\r\n    },\r\n    {\r\n      id: '6',\r\n      name: 'API Response Time',\r\n      value: 120,\r\n      unit: 'ms',\r\n      status: 'critical',\r\n      trend: 'up',\r\n      icon: 'fa-stopwatch',\r\n      threshold: 100,\r\n      lastUpdated: new Date()\r\n    }\r\n  ];\r\n\r\n  cardState: { [key: string]: string } = {};\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    // Initialize card states\r\n    this.metrics.forEach(metric => {\r\n      this.cardState[metric.id] = 'normal';\r\n    });\r\n  }\r\n\r\n  getStatusColor(status: string): string {\r\n    switch (status) {\r\n      case 'normal':\r\n        return 'primary';\r\n      case 'warning':\r\n        return 'accent';\r\n      case 'critical':\r\n        return 'warn';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  getTrendText(trend: 'up' | 'down' | 'stable'): string {\r\n    const trendMap: Record<'up' | 'down' | 'stable', string> = {\r\n      up: 'Improving',\r\n      down: 'Declining',\r\n      stable: 'Stable'\r\n    };\r\n    return trendMap[trend];\r\n  }\r\n\r\n  refreshMetrics(): void {\r\n    console.log('Refreshing system metrics...');\r\n    // Implement refresh logic\r\n  }\r\n\r\n  changeView(viewType: string): void {\r\n    console.log('Changing view to:', viewType);\r\n    // Implement view change logic\r\n  }\r\n\r\n  viewDetails(metric: SystemMetric): void {\r\n    console.log('Viewing details for:', metric.name);\r\n    // Implement detail view\r\n  }\r\n\r\n  configureAlert(metric: SystemMetric): void {\r\n    console.log('Configuring alerts for:', metric.name);\r\n    // Implement alert configuration\r\n  }\r\n}", "<div class=\"system-monitoring-container\" [@fadeIn]>\r\n    <mat-toolbar class=\"toolbar\">\r\n      <div class=\"toolbar-left\">\r\n        <span class=\"app-title\">System Health Dashboard</span>\r\n      </div>\r\n      <div class=\"toolbar-right\">\r\n        <button mat-stroked-button (click)=\"refreshMetrics()\">\r\n          <i class=\"fas fa-sync-alt\"></i>\r\n          Refresh\r\n        </button>\r\n        <button mat-icon-button [matMenuTriggerFor]=\"viewMenu\">\r\n          <i class=\"fas fa-ellipsis-v\"></i>\r\n        </button>\r\n        <mat-menu #viewMenu=\"matMenu\">\r\n          <button mat-menu-item (click)=\"changeView('grid')\">\r\n            <i class=\"fas fa-th-large\"></i>\r\n            Grid View\r\n          </button>\r\n          <button mat-menu-item (click)=\"changeView('list')\">\r\n            <i class=\"fas fa-list\"></i>\r\n            List View\r\n          </button>\r\n        </mat-menu>\r\n      </div>\r\n    </mat-toolbar>\r\n\r\n    <div class=\"metrics-grid\">\r\n      <mat-card \r\n        *ngFor=\"let metric of metrics\" \r\n        class=\"metric-card\"\r\n        [@cardHover]=\"cardState[metric.id]\"\r\n        (mouseenter)=\"cardState[metric.id] = 'hovered'\"\r\n        (mouseleave)=\"cardState[metric.id] = 'normal'\"\r\n      >\r\n        <mat-card-header>\r\n          <div class=\"metric-header\">\r\n            <div class=\"metric-icon\" [ngClass]=\"metric.status\">\r\n              <i class=\"fas\" [ngClass]=\"metric.icon\"></i>\r\n            </div>\r\n            <div class=\"metric-title\">\r\n              <h3>{{ metric.name }}</h3>\r\n              <p>Threshold: {{ metric.threshold }}{{ metric.unit }}</p>\r\n            </div>\r\n          </div>\r\n        </mat-card-header>\r\n\r\n        <mat-divider></mat-divider>\r\n\r\n        <mat-card-content>\r\n          <div class=\"metric-value\">\r\n            <span class=\"value\">{{ metric.value }}{{ metric.unit }}</span>\r\n            <span class=\"trend\" [ngClass]=\"'trend-' + metric.trend\">\r\n              <i class=\"fas\" \r\n                [class.fa-arrow-up]=\"metric.trend === 'up'\"\r\n                [class.fa-arrow-down]=\"metric.trend === 'down'\"\r\n                [class.fa-minus]=\"metric.trend === 'stable'\"></i>\r\n              {{ getTrendText(metric.trend) }}\r\n            </span>\r\n          </div>\r\n\r\n          <mat-progress-bar\r\n            mode=\"determinate\"\r\n            [value]=\"metric.value\"\r\n            [color]=\"getStatusColor(metric.status)\"\r\n            class=\"metric-progress\"\r\n          ></mat-progress-bar>\r\n\r\n          <div class=\"metric-status\">\r\n            <span class=\"status-badge\" [ngClass]=\"metric.status\">\r\n              {{ metric.status | titlecase }}\r\n            </span>\r\n            <span class=\"last-updated\">\r\n              <i class=\"fas fa-clock\"></i>\r\n              {{ metric.lastUpdated | date:'shortTime' }}\r\n            </span>\r\n          </div>\r\n        </mat-card-content>\r\n\r\n        <mat-divider></mat-divider>\r\n\r\n        <mat-card-actions>\r\n          <button mat-button color=\"primary\" (click)=\"viewDetails(metric)\">\r\n            <i class=\"fas fa-chart-line\"></i>\r\n            Details\r\n          </button>\r\n          <button mat-button (click)=\"configureAlert(metric)\">\r\n            <i class=\"fas fa-bell\"></i>\r\n            Alerts\r\n          </button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </div>\r\n  </div>"],
  "mappings": "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",
  "names": []
}
